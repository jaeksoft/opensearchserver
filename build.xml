<?xml version="1.0" encoding="UTF-8"?>
<!--   
	License Agreement for OpenSearchServer
	
	Copyright (C) 2008-2013 Emmanuel Keller / Jaeksoft
	
	http://www.open-search-server.com
	
	This file is part of OpenSearchServer.
	
	OpenSearchServer is free software: you can redistribute it and/or
	modify it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.
	
	OpenSearchServer is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.
	
	You should have received a copy of the GNU General Public License
	along with OpenSearchServer. 
	If not, see <http://www.gnu.org/licenses/>.
-->
<project name="OpenSearchServer" default="dist" basedir=".">

	<property environment="env" />
	<property name="dist" location="dist" />
	<property name="licenses" location="licenses" />
	<property name="shelldir" location="shell" />
	<property name="product" value="opensearchserver" />
	<property name="env.BUILD_NUMBER" value="" />
	<property name="oss_testing_instance" value="http://localhost:9090" />
	<property name="temp" location="temp" />

	<!-- Read the manifest from the WAR -->
	<loadproperties>
		<zipentry name="META-INF/MANIFEST.MF">
			<first>
				<fileset dir="target" includes="**/opensearchserver-*.war" />
			</first>
		</zipentry>
	</loadproperties>

	<property name="productsrc" value="${product}-${Implementation-Version}" />
	<property name="productdest" value="${product}-${Implementation-Version}-b${env.BUILD_NUMBER}" />

	<!-- Start OpenSearchServer using the embedded Tomcat -->
	<target name="start" description="Starts OpenSearchServer">
		<mkdir dir="${temp}" />
		<mkdir dir="${temp}/data" />
		<java fork="true" jar="target/${productsrc}-war-exec.jar" dir="${temp}" spawn="true">
			<env key="OPENSEARCHSERVER_DATA" value="${temp}/data" />
			<arg line="-httpPort 9090" />
		</java>
		<waitfor maxwait="120" maxwaitunit="second" checkevery="2" checkeveryunit="second">
			<http url="${oss_testing_instance}" />
		</waitfor>
	</target>

	<!-- Stop any running OpenSearchServer -->
	<target name="stop" description="Stop any running embedded Tomcat">
		<exec executable="jps" output="${temp}/jps.out" />
		<loadfile srcfile="${temp}/jps.out" property="oss_pid">
			<filterchain>
				<linecontainsregexp>
					<regexp pattern="[0-9]+ ${productsrc}-war-exec.jar" />
				</linecontainsregexp>
				<replaceregex pattern="([0-9]+) ${productsrc}-war-exec.jar" replace="\1" />
				<prefixlines prefix=" " />
				<striplinebreaks />
				<trim />
			</filterchain>
		</loadfile>

		<fail message="No PID found">
			<condition>
				<not>
					<isset property="oss_pid" />
				</not>
			</condition>
		</fail>

		<exec executable="kill">
			<arg line="${oss_pid}" />
		</exec>
	</target>

	<target name="dist">

		<mkdir dir="${dist}/${product}" />
		<mkdir dir="${dist}/${product}/data" />

		<copy tofile="${dist}/${product}/${product}.jar">
			<fileset file="target/${productsrc}-war-exec.jar" />
		</copy>

		<copy tofile="${dist}/${productdest}.deb">
			<fileset file="target/${productsrc}.deb" />
		</copy>

		<copy tofile="${dist}/${productdest}.war">
			<fileset file="target/${productsrc}.war" />
		</copy>

		<copy todir="${dist}/${product}/LICENSES">
			<fileset dir="${licenses}" />
		</copy>

		<copy todir="${dist}/${product}">
			<fileset file="NOTICE.txt" />
			<fileset file="README.md" />
			<fileset file="CHANGELOG.txt.gz" />
			<fileset dir="${shelldir}" />
		</copy>

		<!-- Check executable file flag for batches -->
		<chmod perm="ugo+x" type="file">
			<fileset dir="${dist}/${product}">
				<include name="**/*.sh" />
				<include name="**/*.bat" />
			</fileset>
		</chmod>

		<!-- Create the tar.gz archive -->
		<tar longfile="gnu" compression="gzip" destfile="${dist}/${productdest}.tar.gz">
			<tarfileset dir="${dist}/${product}" mode="755" prefix="${product}">
				<include name="**/*.sh" />
				<include name="**/*.bat" />
			</tarfileset>
			<tarfileset dir="${dist}/${product}" prefix="${product}">
				<include name="**" />
				<exclude name="**/*.sh" />
				<exclude name="**/*.bat" />
			</tarfileset>
		</tar>

		<!-- Create the zip archive -->
		<zip encoding="windows-1250" destfile="${dist}/${productdest}.zip">
			<zipfileset dir="${dist}/${product}" filemode="755" prefix="${product}">
				<include name="**/*.sh" />
				<include name="**/*.bat" />
			</zipfileset>
			<zipfileset dir="${dist}/${product}" prefix="${product}">
				<include name="**" />
				<exclude name="**/*.sh" />
				<exclude name="**/*.bat" />
			</zipfileset>
		</zip>

		<!-- Copy Txt Files -->
		<copy todir="${dist}">
			<fileset file="README.md" />
			<fileset file="CHANGELOG.txt.gz" />
		</copy>

		<!-- Clean the temporary product directory -->
		<delete dir="${dist}/${product}" />

	</target>

	<!-- The tarball -->
	<target name="dist-src">
		<mkdir dir="${dist}" />
		<tar compression="gzip" destfile="${dist}/${productdest}.src.tar.gz" longfile="gnu" basedir="." excludes="temp/**, dist/**, ant-build/**, build/**, target/**, .git/**" />
	</target>

	<target name="clean" description="clean up">
		<delete dir="${temp}" />
		<delete dir="${dist}" />
	</target>

</project>